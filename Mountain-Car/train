#!/usr/bin/env python

from embodied_ising import ising
import numpy as np
from sys import argv
import ising_correlations as ic

if len(argv) < 7:
    print(
        "Usage: " +
        argv[0] +
        " <network size>" +
        " <number of sensors>" +
        " <number of motors>" +
        " <Simulation time>"
        " <Number of iterations>" +
        " <Number of repetitions>")
    exit(1)

size = int(argv[1])
Nsensors = int(argv[2])
Nmotors = int(argv[3])
T = int(argv[4])
Iterations = int(argv[5])
repetitions = int(argv[6])

#filename = 'correlations-ising2D-size400.npy'
#Cdist = np.load(filename)


L=100
for rep in range(repetitions):
	I = ising(size, Nsensors, Nmotors)
	I.m_ref = ic.random_means(size)
	I.pos = ic.random_positions(L, L, size)
	I.C_ref = ic.ising_correlations(I.pos, I.m_ref)
	I.CriticalLearning(Iterations, T)

	filename = 'files/network-size_' + str(size) + '-sensors_' + str(Nsensors) + '-motors_' + str(
	    Nmotors) + '-T_' + str(T) + '-Iterations_' + str(Iterations) + '-ind_' + str(rep) + '.npz'
np.savez(filename, J=I.J, h=I.h, m1=I.m_ref, Cint=I.C_ref)
